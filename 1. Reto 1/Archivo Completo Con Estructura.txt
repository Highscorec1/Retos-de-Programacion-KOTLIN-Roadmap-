//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                              #01  Operadores y Estructursa de Control                                            //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

fun main() {
    
   operadores()
   estructurasDeControl()
   
   val valorRetornado1 = numret("Fizz", "Buzz") 

   println("Número de veces que se imprimió un número: $valorRetornado1")  // Mostramos el conteo al final  
   
    val valorRetornado2 = funcionReci("fizz", "buzz")

    println("El valor del contador que retornamos de la función las veces que solo se imprimio un numero es $valorRetornado2")
   
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                     Tipos de Operadores                                                          //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

private fun operadores(){
	
    
    println("Operadores Aritméticos")
    println()
    // Operadores Aritméticos
    val a = 10
    val b = 3
    println("Suma: ${a + b}")
    println("Resta: ${a - b}")
    println("Multiplicación: ${a * b}")
    println("División: ${a / b}")
    println("Módulo: ${a % b}")
	
    println()
    println("Operadores de Asignación")
    println()
    // Operadores de Asignación
    var x = 5
    x += 3
    println("Asignación += : $x")
    x *= 2
    println("Asignación *= : $x")

    // Operadores de Comparación
    println()
    println("Operadores de Comparación")
    println()
    println("¿a es igual a b?: ${a == b}")
    println("¿a es diferente de b?: ${a != b}")
    println("¿a es mayor que b?: ${a > b}")
    println("¿a es menor o igual que b?: ${a <= b}")

    // Operadores Lógicos
    println()
    println("Operadores Lógicos")
    println()
    val bool1 = true
    val bool2 = false
    println("AND lógico: ${bool1 && bool2}")
    println("OR lógico: ${bool1 || bool2}")
    println("NOT lógico: ${!bool1}")

    // Operadores de Identidad (Referencias)
    println()
    println("Operadores de Identidad-Referencia")
    println()
    val obj1 = "Hola"
    val obj2 = "Hola"
    val obj3 = obj1
    println("¿obj1 y obj2 son el mismo objeto?: ${obj1 === obj2}")
    println("¿obj1 y obj3 son el mismo objeto?: ${obj1 === obj3}")

    // Operadores de Pertenencia
    println()
    println("Operadores de Pertenencia")
    println()
    val lista = listOf(1, 2, 3, 4, 5)
    println("¿2 está en la lista?: ${2 in lista}")
    println("¿6 no está en la lista?: ${6 !in lista}")

    // Operadores de Bits
    println()
    println("Operadores de Bits en Kotlin")
    println()
    
    // Operadores de Bits
    val bitA = 0b1010 // 10 en decimal
    val bitB = 0b1100 // 12 en decimal
    println("AND a nivel de bits: ${bitA and bitB}")
    println("OR a nivel de bits: ${bitA or bitB}")
    println("XOR a nivel de bits: ${bitA xor bitB}")
    println("Desplazamiento a la izquierda: ${bitA shl 1}")
    println("Desplazamiento a la derecha: ${bitB shr 2}")
    
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                     Estructurasde Control                                                        //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


private fun estructurasDeControl(){
    
    
    println()
    println("Estructuras Condicional if-else")
    println()
    // Condicional if-else
    val edad = 18
    if (edad >= 18) {
        println("Eres mayor de edad")
    } else {
        println("Eres menor de edad")
    }
	
    println()
    println("Estructuras When")
    println()
    // Condicional when (equivalente a switch en java)
    val dia = 3
    when (dia) {
        1 -> println("Lunes")
        2 -> println("Martes")
        3 -> println("Miércoles")
        else -> println("Otro día")
    }

    println()
    println("Bucle For")
    println()
    // Bucle for
    for (i in 1..5) {
        println("For loop, valor: $i")
    }

    // Bucle while
    println()
    println("Bucle while")
    println()
    var contador = 3
    while (contador > 0) {
        println("While loop, contador: $contador")
        contador--
    }

    // Bucle do-while
    println()
    println("Bucle do-while")
    println()
    var numero = 0
    do {
        println("Do-while loop, número: $numero")
        numero++
    } while (numero < 3)

    // Manejo de excepciones
    println()
    println("Manejo de excepciones")
    println()
    try {
        val resultado = 10 / 0
        println("Resultado: $resultado")
    } catch (e: ArithmeticException) {
        println("Error: División por cero")
    } finally {
        println("Bloque finally siempre se ejecuta")
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                          Ejercicio Adicional Con Estructura if-else                                              //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
private fun numret(texto1: String? = null, texto2: String? = null):Int {
    
    println()
    println("Ejercicio Adicional pirmera forma usando if")
    
    	var conteo = 0
    
    
    println("numeros: ")

    for (num in 1..100) {       
        
        if (num % 5 == 0 && num % 3 == 0) {
            
            println(texto1 + " " + texto2)
       		
   	} else if (num % 5 == 0) {
        
        	println(texto2)
        
        }else if (num % 3 == 0) {
            
            println(texto1)
           
        }else {
            println(num)
       		 conteo++      
        }
         
    }    
         
 return conteo      
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                Ejercicio Adicional Con When                                                      //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

private fun funcionReci( nombre1: String? = "", nombre2: String? = ""): Int{
    
    println()
    println("Ejercicio Adicional segunda forma usando when") 
    
    var contador = 0
    
    for (num in 1..100){
       
        
         
        when{
            num % 5 == 0 && num % 3 == 0 -> println(nombre1 + " " + nombre2)
            num % 3 == 0 -> println(nombre1)
            num % 5 == 0 -> println(nombre2)
        
        	else -> { println(num)
            			contador++ }
        
        }  
        
    }
    
    return contador
}